ðŸš€ Training AutoEncoderTrainer method for 1 epochs...
torch.Size([2, 1006, 48, 48, 48])
Epochs:   0%|                                                                                                                                                                                                                                                   | 0/1 [00:00<?, ?epoch/s]
torch.Size([2, 32, 6, 6, 6])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                  | 0/1 [00:07<?, ?epoch/s, batch=2/138, train_loss=0.0000, val_loss=0.0000]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])


Epochs:   0%|                                                                                                                                                                                                  | 0/1 [00:11<?, ?epoch/s, batch=4/138, train_loss=0.0000, val_loss=0.0000]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                  | 0/1 [00:12<?, ?epoch/s, batch=5/138, train_loss=0.0000, val_loss=0.0000]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                  | 0/1 [00:14<?, ?epoch/s, batch=6/138, train_loss=0.0000, val_loss=0.0000]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                  | 0/1 [00:16<?, ?epoch/s, batch=7/138, train_loss=0.0000, val_loss=0.0000]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                  | 0/1 [00:19<?, ?epoch/s, batch=9/138, train_loss=0.0000, val_loss=0.0000]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                 | 0/1 [00:21<?, ?epoch/s, batch=10/138, train_loss=0.0000, val_loss=0.0000]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                                                   | 0/1 [00:22<?, ?epoch/s, eval_batch=1/8]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                                                   | 0/1 [00:24<?, ?epoch/s, eval_batch=2/8]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                                                   | 0/1 [00:27<?, ?epoch/s, eval_batch=4/8]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                                                   | 0/1 [00:29<?, ?epoch/s, eval_batch=5/8]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                                                   | 0/1 [00:30<?, ?epoch/s, eval_batch=6/8]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                                                   | 0/1 [00:33<?, ?epoch/s, eval_batch=8/8]
ðŸŽ‰ Saving model with new best loss: 0.0164
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                 | 0/1 [00:35<?, ?epoch/s, batch=11/138, train_loss=0.0037, val_loss=0.0164]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                 | 0/1 [00:37<?, ?epoch/s, batch=12/138, train_loss=0.0037, val_loss=0.0164]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                 | 0/1 [00:39<?, ?epoch/s, batch=13/138, train_loss=0.0037, val_loss=0.0164]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                 | 0/1 [00:40<?, ?epoch/s, batch=14/138, train_loss=0.0037, val_loss=0.0164]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                 | 0/1 [00:42<?, ?epoch/s, batch=15/138, train_loss=0.0037, val_loss=0.0164]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                 | 0/1 [00:44<?, ?epoch/s, batch=16/138, train_loss=0.0037, val_loss=0.0164]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                 | 0/1 [00:47<?, ?epoch/s, batch=18/138, train_loss=0.0037, val_loss=0.0164]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                 | 0/1 [00:49<?, ?epoch/s, batch=19/138, train_loss=0.0037, val_loss=0.0164]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                 | 0/1 [00:51<?, ?epoch/s, batch=20/138, train_loss=0.0037, val_loss=0.0164]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                                                   | 0/1 [00:52<?, ?epoch/s, eval_batch=1/8]
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 1006, 48, 48, 48])
torch.Size([2, 32, 6, 6, 6])

Epochs:   0%|                                                                                                                                                                                                                                   | 0/1 [00:56<?, ?epoch/s, eval_batch=3/8]
Traceback (most recent call last):
  File "C:\Users\arnau\Desktop\blocksage\git\blocksage\src\autoencoder\autoencoder_train.py", line 156, in <module>
    statistics = trainer.train(
                 ^^^^^^^^^^^^^^
  File "C:\Users\arnau\Desktop\blocksage\git\blocksage\src\autoencoder\..\..\src\trainers\trainer.py", line 162, in train
    self._train_one_epoch(
  File "C:\Users\arnau\Desktop\blocksage\git\blocksage\src\autoencoder\..\..\src\trainers\trainer.py", line 325, in _train_one_epoch
    stats = self._evaluate(val_loader, bar=bar)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arnau\Desktop\blocksage\git\blocksage\src\autoencoder\..\..\src\trainers\trainer.py", line 386, in _evaluate
    for batch_idx, batch in enumerate(loader):
  File "C:\Users\arnau\anaconda3\envs\dm\Lib\site-packages\torch\utils\data\dataloader.py", line 631, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\arnau\anaconda3\envs\dm\Lib\site-packages\torch\utils\data\dataloader.py", line 675, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arnau\anaconda3\envs\dm\Lib\site-packages\torch\utils\data\_utils\fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "C:\Users\arnau\Desktop\blocksage\git\blocksage\src\autoencoder\..\..\src\datasets\cluster_dataset.py", line 121, in __getitem__
    one_hot(cluster_gt.long(), self.num_total_classes)
KeyboardInterrupt